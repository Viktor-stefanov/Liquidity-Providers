{
  "address": "0x0fe4223AD99dF788A6Dcad148eB4086E6389cEB6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokenContracts",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_tokenAggregators",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xbabda626d6ef503a78c76e05f1749230428ec79976b93b8f6ce786707961a182",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x0fe4223AD99dF788A6Dcad148eB4086E6389cEB6",
    "transactionIndex": 0,
    "gasUsed": "329685",
    "logsBloom": "0x
    "blockHash": "0xbb581576acad1a5b705fd31ffda16c9bd38d8bb490d7102e0bc2edbba7c42d0f",
    "transactionHash": "0xbabda626d6ef503a78c76e05f1749230428ec79976b93b8f6ce786707961a182",
    "logs": [],
    "blockNumber": 259,
    "cumulativeGasUsed": "329685",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "0x114e375B6FCC6d6fCb68c7A1d407E652C54F25FB",
      "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b"
    ],
    [
      "0xA4899D35897033b927acFCf422bc745916139776",
      "0x5bf5b11053e734690269C6B9D438F8C9d48F528A",
      "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b"
    ]
  ],
  "numDeployments": 4,
  "solcInputHash": "81833c297ff37d7df6defe81871429a3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokenContracts\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_tokenAggregators\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceFeed.sol\":\"PriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function latestRound() external view returns (uint256);\\n\\n  function getAnswer(uint256 roundId) external view returns (int256);\\n\\n  function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\\n}\\n\",\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\\n\",\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/PriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: no-license\\npragma solidity 0.8.17;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\\\";\\n\\ncontract PriceFeed {\\n    mapping(address => AggregatorV3Interface) priceFeeds;\\n\\n    constructor(\\n        address[] memory _tokenContracts,\\n        address[] memory _tokenAggregators\\n    ) {\\n        require(\\n            _tokenContracts.length == _tokenAggregators.length,\\n            \\\"Mismatch in amount of token contracts and token aggregators.\\\"\\n        );\\n\\n        for (uint256 i = 0; i < _tokenContracts.length; i++) {\\n            address tokenContract = _tokenContracts[i];\\n            address tokenAggregator = _tokenAggregators[i];\\n            priceFeeds[tokenContract] = AggregatorV3Interface(tokenAggregator);\\n        }\\n    }\\n\\n    function getPrice(address _tokenContract) public view returns (int256) {\\n        (, int256 price, , , ) = priceFeeds[_tokenContract].latestRoundData();\\n        return price;\\n    }\\n}\\n\",\"keccak256\":\"0x419ba1c3eace4e7d8d4ef0c777141f8799400cae4aa3d5623d8813a7f9bf0947\",\"license\":\"no-license\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161085738038061085783398181016040528101906100329190610325565b8051825114610076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006d90610420565b60405180910390fd5b60005b825181101561015257600083828151811061009757610096610440565b5b6020026020010151905060008383815181106100b6576100b5610440565b5b60200260200101519050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050808061014a906104a8565b915050610079565b5050506104f0565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101bc82610173565b810181811067ffffffffffffffff821117156101db576101da610184565b5b80604052505050565b60006101ee61015a565b90506101fa82826101b3565b919050565b600067ffffffffffffffff82111561021a57610219610184565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025b82610230565b9050919050565b61026b81610250565b811461027657600080fd5b50565b60008151905061028881610262565b92915050565b60006102a161029c846101ff565b6101e4565b905080838252602082019050602084028301858111156102c4576102c361022b565b5b835b818110156102ed57806102d98882610279565b8452602084019350506020810190506102c6565b5050509392505050565b600082601f83011261030c5761030b61016e565b5b815161031c84826020860161028e565b91505092915050565b6000806040838503121561033c5761033b610164565b5b600083015167ffffffffffffffff81111561035a57610359610169565b5b610366858286016102f7565b925050602083015167ffffffffffffffff81111561038757610386610169565b5b610393858286016102f7565b9150509250929050565b600082825260208201905092915050565b7f4d69736d6174636820696e20616d6f756e74206f6620746f6b656e20636f6e7460008201527f726163747320616e6420746f6b656e2061676772656761746f72732e00000000602082015250565b600061040a603c8361039d565b9150610415826103ae565b604082019050919050565b60006020820190508181036000830152610439816103fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006104b38261049e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104e5576104e461046f565b5b600182019050919050565b610358806104ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806341976e0914610030575b600080fd5b61004a600480360381019061004591906101a2565b610060565b60405161005791906101e8565b60405180910390f35b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013091906102a7565b50505091505080915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061016f82610144565b9050919050565b61017f81610164565b811461018a57600080fd5b50565b60008135905061019c81610176565b92915050565b6000602082840312156101b8576101b761013f565b5b60006101c68482850161018d565b91505092915050565b6000819050919050565b6101e2816101cf565b82525050565b60006020820190506101fd60008301846101d9565b92915050565b600069ffffffffffffffffffff82169050919050565b61022281610203565b811461022d57600080fd5b50565b60008151905061023f81610219565b92915050565b61024e816101cf565b811461025957600080fd5b50565b60008151905061026b81610245565b92915050565b6000819050919050565b61028481610271565b811461028f57600080fd5b50565b6000815190506102a18161027b565b92915050565b600080600080600060a086880312156102c3576102c261013f565b5b60006102d188828901610230565b95505060206102e28882890161025c565b94505060406102f388828901610292565b935050606061030488828901610292565b925050608061031588828901610230565b915050929550929590935056fea2646970667358221220737500bfaf382ec687de828e295e10807cfeb1988cb46ebfb2ddb68e70471d9c64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806341976e0914610030575b600080fd5b61004a600480360381019061004591906101a2565b610060565b60405161005791906101e8565b60405180910390f35b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013091906102a7565b50505091505080915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061016f82610144565b9050919050565b61017f81610164565b811461018a57600080fd5b50565b60008135905061019c81610176565b92915050565b6000602082840312156101b8576101b761013f565b5b60006101c68482850161018d565b91505092915050565b6000819050919050565b6101e2816101cf565b82525050565b60006020820190506101fd60008301846101d9565b92915050565b600069ffffffffffffffffffff82169050919050565b61022281610203565b811461022d57600080fd5b50565b60008151905061023f81610219565b92915050565b61024e816101cf565b811461025957600080fd5b50565b60008151905061026b81610245565b92915050565b6000819050919050565b61028481610271565b811461028f57600080fd5b50565b6000815190506102a18161027b565b92915050565b600080600080600060a086880312156102c3576102c261013f565b5b60006102d188828901610230565b95505060206102e28882890161025c565b94505060406102f388828901610292565b935050606061030488828901610292565b925050608061031588828901610230565b915050929550929590935056fea2646970667358221220737500bfaf382ec687de828e295e10807cfeb1988cb46ebfb2ddb68e70471d9c64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1044,
        "contract": "contracts/PriceFeed.sol:PriceFeed",
        "label": "priceFeeds",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)102)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(AggregatorV3Interface)102)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract AggregatorV3Interface)",
        "numberOfBytes": "32",
        "value": "t_contract(AggregatorV3Interface)102"
      }
    }
  }
}