{
  "address": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokenContracts",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_tokenAggregators",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xbfe5c6720a50a8968db779055b8ab5d27b97f9afceed0073ab1b0e3ae4d3f88d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
    "transactionIndex": 0,
    "gasUsed": "230048",
    "logsBloom": "0x
    "blockHash": "0xbbc0261ea01549cc8e3bb605c861410b54962325a90d2f0ed6292d333b26e276",
    "transactionHash": "0xbfe5c6720a50a8968db779055b8ab5d27b97f9afceed0073ab1b0e3ae4d3f88d",
    "logs": [],
    "blockNumber": 145,
    "cumulativeGasUsed": "230048",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x7A9Ec1d04904907De0ED7b6839CcdD59c3716AC9",
      "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "0xA4899D35897033b927acFCf422bc745916139776"
    ],
    [
      "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "0xA4899D35897033b927acFCf422bc745916139776"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "4b5819992c2da1c73367b63340d46447",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokenContracts\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_tokenAggregators\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceFeed.sol\":\"PriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function latestRound() external view returns (uint256);\\n\\n  function getAnswer(uint256 roundId) external view returns (int256);\\n\\n  function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\\n}\\n\",\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\\n\",\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/PriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: no-license\\npragma solidity 0.8.17;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\\\";\\n\\ncontract PriceFeed {\\n    mapping(address => AggregatorV3Interface) priceFeeds;\\n\\n    constructor(\\n        address[] memory _tokenContracts,\\n        address[] memory _tokenAggregators\\n    ) {\\n        require(\\n            _tokenContracts.length == _tokenAggregators.length,\\n            \\\"Mismatch in amount of token contracts and token aggregators.\\\"\\n        );\\n\\n        for (uint256 i = 0; i < _tokenContracts.length; i++) {\\n            address tokenContract = _tokenContracts[i];\\n            address tokenAggregator = _tokenAggregators[i];\\n            priceFeeds[tokenContract] = AggregatorV3Interface(tokenAggregator);\\n        }\\n    }\\n\\n    function getPrice(address _tokenContract) public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeeds[_tokenContract].latestRoundData();\\n        return uint256(price);\\n    }\\n}\\n\",\"keccak256\":\"0x4a9b267370e8fce7a2ed2100c2e428ace45d7f708a2f9e3d775ae3077e5feabe\",\"license\":\"no-license\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161047538038061047583398101604081905261002f91610212565b80518251146100aa5760405162461bcd60e51b815260206004820152603c60248201527f4d69736d6174636820696e20616d6f756e74206f6620746f6b656e20636f6e7460448201527f726163747320616e6420746f6b656e2061676772656761746f72732e00000000606482015260840160405180910390fd5b60005b82518110156101375760008382815181106100ca576100ca610275565b6020026020010151905060008383815181106100e8576100e8610275565b6020908102919091018101516001600160a01b03938416600090815291829052604090912080546001600160a01b0319169390911692909217909155508061012f8161028b565b9150506100ad565b5050506102b2565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461016c57600080fd5b919050565b600082601f83011261018257600080fd5b815160206001600160401b038083111561019e5761019e61013f565b8260051b604051601f19603f830116810181811084821117156101c3576101c361013f565b6040529384528581018301938381019250878511156101e157600080fd5b83870191505b84821015610207576101f882610155565b835291830191908301906101e7565b979650505050505050565b6000806040838503121561022557600080fd5b82516001600160401b038082111561023c57600080fd5b61024886838701610171565b9350602085015191508082111561025e57600080fd5b5061026b85828601610171565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016102ab57634e487b7160e01b600052601160045260246000fd5b5060010190565b6101b4806102c16000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806341976e0914610030575b600080fd5b61004361003e3660046100df565b610055565b60405190815260200160405180910390f35b6001600160a01b03808216600090815260208190526040808220548151633fabe5a360e21b815291519293849391169163feaf968c9160048083019260a09291908290030181865afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d3919061012e565b50919695505050505050565b6000602082840312156100f157600080fd5b81356001600160a01b038116811461010857600080fd5b9392505050565b805169ffffffffffffffffffff8116811461012957600080fd5b919050565b600080600080600060a0868803121561014657600080fd5b61014f8661010f565b94506020860151935060408601519250606086015191506101726080870161010f565b9050929550929590935056fea26469706673582212208484ba5a1d466c649d42a0b290512a368243bbf97bfe5457126e2bbf8687b9d464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806341976e0914610030575b600080fd5b61004361003e3660046100df565b610055565b60405190815260200160405180910390f35b6001600160a01b03808216600090815260208190526040808220548151633fabe5a360e21b815291519293849391169163feaf968c9160048083019260a09291908290030181865afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d3919061012e565b50919695505050505050565b6000602082840312156100f157600080fd5b81356001600160a01b038116811461010857600080fd5b9392505050565b805169ffffffffffffffffffff8116811461012957600080fd5b919050565b600080600080600060a0868803121561014657600080fd5b61014f8661010f565b94506020860151935060408601519250606086015191506101726080870161010f565b9050929550929590935056fea26469706673582212208484ba5a1d466c649d42a0b290512a368243bbf97bfe5457126e2bbf8687b9d464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1272,
        "contract": "contracts/PriceFeed.sol:PriceFeed",
        "label": "priceFeeds",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)102)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(AggregatorV3Interface)102)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract AggregatorV3Interface)",
        "numberOfBytes": "32",
        "value": "t_contract(AggregatorV3Interface)102"
      }
    }
  }
}